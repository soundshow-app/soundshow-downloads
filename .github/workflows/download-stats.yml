name: Record release download counts (daily)

on:
  schedule:
    - cron: "12 2 * * *"   # daily at 02:12 UTC (~04:12 Brussels in summer)
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  record:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo:
          - sound-show-app/soundshow-downloads
          - sound-show-app/soundshow-remote-downloads
    steps:
      - uses: actions/checkout@v4

      - name: Collect counts for ${{ matrix.repo }}
        env:
          REPO: ${{ matrix.repo }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          date_utc=$(date -u +%F)
          mkdir -p stats
          # File per repo (e.g. soundshow-downloads.csv)
          repo_file="stats/$(echo "$REPO" | cut -d/ -f2).csv"
          # Header once
          if [ ! -s "$repo_file" ]; then
            echo "date,tag,asset,download_count" > "$repo_file"
          fi

          # Fetch all releases (first 100 is plenty for most projects)
          curl -s -H "Accept: application/vnd.github+json" \
               -H "X-GitHub-Api-Version: 2022-11-28" \
               -H "Authorization: Bearer $GH_TOKEN" \
               "https://api.github.com/repos/$REPO/releases?per_page=100" > releases.json

          # Append one row per asset of each release
          jq -r --arg d "$date_utc" '
            .[] | .tag_name as $tag
            | .assets[]
            | [$d, $tag, .name, (.download_count // 0)]
            | @csv
          ' releases.json >> "$repo_file"

      - name: Commit stats (if changed)
        run: |
          git config user.name  "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add stats/*.csv || true
          git commit -m "stats: $(date -u +%F)" || echo "No changes"
          git push
